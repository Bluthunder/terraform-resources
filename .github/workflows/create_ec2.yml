name: Deploy EC2 with Terraform

on:
  workflow_dispatch:
    inputs:
      instance_type:
        description: 'EC2 Instance Type'
        required: true
        default: 't2.micro'
        type: choice
        options:
          - t2.micro
          - t2.small
          - t3.medium
          - t3.large
      aws_region:
        description: 'AWS Region'
        required: true
        default: 'us-east-1'
        type: choice
        options:
          - us-east-1
          - us-west-1
          - eu-central-1
      custom_port:
        description: 'Custom Port'
        required: true
        default: '7001'
        type: string
      instance_name:
        description: 'Instance Name'
        required: true
        default: 'terraform-ec2'
        type: string
      ssh_key_name:
        description: 'SSH Key Name'
        required: true
        default: 'private-key'
        type: string


permissions:
  id-token: write
  contents: read


jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::008971663545:role/ec2-ssm-role
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform
        run: |
          terraform apply -auto-approve \
            -var="aws_region=${{ github.event.inputs.aws_region }}" \
            -var="instance_type=${{ github.event.inputs.instance_type }}" \
            -var="custom_port=${{ github.event.inputs.custom_port}}" \
            -var="instance_name=${{github.event.inputs.instance_name}}" \
            -var="ssh_key_name=${{github.event.inputs.ssh_key_name}}"

      - name: Show Terraform output
        run: terraform output


      - name: Get EC2 Public IP from Terraform Output
        id: get_ip
        run: |
            OUTPUT=$(terraform output -raw ec2_public_ip 2>&1)
            if [[ "$OUTPUT" =~ ([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+) ]]; then
              IP="${BASH_REMATCH[1]}"
              echo "EC2_PUBLIC_IP=$IP"
              echo "EC2_PUBLIC_IP=$IP" >> $GITHUB_ENV
            else
              echo "Invalid IP output: $OUTPUT"
              exit 1
            fi
    
      - name: Store EC2 Public IP in SSM Parameter Store
        run: |
              aws ssm put-parameter \
                --name "/ec2-public-ip" \
                --value "$EC2_PUBLIC_IP" \
                --type String \
                --overwrite

